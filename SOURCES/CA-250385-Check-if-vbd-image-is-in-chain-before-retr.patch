From ba034c0ed6a28161081af13790ba556b572005bc Mon Sep 17 00:00:00 2001
From: Swathi Kovvuri <swathi.kovvuri@citrix.com>
Date: Wed, 28 Jun 2017 11:33:39 +0100
Subject: [PATCH] CA-250385: Check if vbd image is in chain, before retrieving
 the next

Issue:
 Precondition: Intellicache enabled on persist mode.
 Description:  When mirroring is disabled due to ENOSPC on shared
               storage,the aio writes will fail and the
               corresponding image handle is removed from the vbd
               images list and its iterator is pointed to itself.
               Now the read ops tagged with this image handle try
               to access next item from the image list and ends up
               into infinite recursion.

Fix: Before trying to access the iterator of an image handle,
     check if "retired" parameter is set or not. If so try to
     get the next handle from vbd.

Signed-off-by: Swathi Kovvuri <swathi.kovvuri@citrix.com>
Reviewed-by: Chandrika Srinivasan <chandrika.srinivasan@citrix.com>
---
 drivers/tapdisk-vbd.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/drivers/tapdisk-vbd.c b/drivers/tapdisk-vbd.c
index b05e500..20f8da5 100644
--- a/drivers/tapdisk-vbd.c
+++ b/drivers/tapdisk-vbd.c
@@ -1350,8 +1350,15 @@ __tapdisk_vbd_reissue_td_request(td_vbd_t *vbd,
 		td_complete_request(treq, 0);
 		goto done;
 	}
+	/*
+	 * If intellicache is enabled, check to confirm  mirroring
+	 * is disabled due to out of space.
+	 */
+	if (unlikely(vbd->retired && vbd->retired == image))
+		parent = tapdisk_vbd_first_image(vbd);
+	else
+		parent = tapdisk_vbd_next_image(image);
 
-	parent     = tapdisk_vbd_next_image(image);
 	treq.image = parent;
 
 	/* return zeros for requests that extend beyond end of parent image */
-- 
1.8.3.1

