From 8ee4a5be09eb715b1aadfab77f2443195ddc32ed Mon Sep 17 00:00:00 2001
From: Anthoine Bourgeois <anthoine.bourgeois@vates.tech>
Date: Thu, 16 Jan 2025 14:09:40 +0100
Subject: [PATCH] tapdisk: protect td_blktap_t structure

Add a mutex to protect blktap structure from qcow2 concurrency.

Signed-off-by: Anthoine Bourgeois <anthoine.bourgeois@vates.tech>
---
 drivers/tapdisk-blktap.c | 18 ++++++++++++++----
 drivers/tapdisk-blktap.h |  1 +
 2 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/drivers/tapdisk-blktap.c b/drivers/tapdisk-blktap.c
index d706724c..d60c4e3e 100644
--- a/drivers/tapdisk-blktap.c
+++ b/drivers/tapdisk-blktap.c
@@ -85,18 +85,20 @@ struct td_blktap_req {
         struct timeval          ts;
 };
 
-td_blktap_req_t *
+static td_blktap_req_t *
 tapdisk_blktap_alloc_request(td_blktap_t *tap)
 {
 	td_blktap_req_t *req = NULL;
 
+	pthread_mutex_lock(&tap->mutex);
 	if (likely(tap->n_reqs_free))
 		req = tap->reqs_free[--tap->n_reqs_free];
+	pthread_mutex_unlock(&tap->mutex);
 
 	return req;
 }
 
-void
+static void
 tapdisk_blktap_free_request(td_blktap_t *tap, td_blktap_req_t *req)
 {
 	BUG_ON(tap->n_reqs_free >= tap->n_reqs);
@@ -115,6 +117,8 @@ tapdisk_blktap_reqs_free(td_blktap_t *tap)
 		free(tap->reqs_free);
 		tap->reqs_free = NULL;
 	}
+
+	pthread_mutex_destroy(&tap->mutex);
 }
 
 static int
@@ -122,6 +126,8 @@ tapdisk_blktap_reqs_init(td_blktap_t *tap, int n_reqs)
 {
 	int i, err;
 
+	pthread_mutex_init(&tap->mutex, NULL);
+
 	tap->reqs = malloc(n_reqs * sizeof(td_blktap_req_t));
 	if (!tap->reqs) {
 		err = -errno;
@@ -198,6 +204,7 @@ tapdisk_blktap_fail_request(td_blktap_t *tap,
 
 	BUG_ON(!tap->vma);
 
+	pthread_mutex_lock(&tap->mutex);
 	rsp = BLKTAP_GET_RESPONSE(tap, tap->rsp_prod_pvt);
 
 	rsp->id        = msg->id;
@@ -205,6 +212,7 @@ tapdisk_blktap_fail_request(td_blktap_t *tap,
 	rsp->status    = tapdisk_blktap_error_status(tap, error);
 
 	__tapdisk_blktap_push_response(tap, 1);
+	pthread_mutex_unlock(&tap->mutex);
 }
 
 static void
@@ -216,6 +224,7 @@ tapdisk_blktap_put_response(td_blktap_t *tap,
         unsigned long long interval;
         struct timeval now;
 
+	pthread_mutex_lock(&tap->mutex);
 	BUG_ON(!tap->vma);
 
 	rsp = BLKTAP_GET_RESPONSE(tap, tap->rsp_prod_pvt);
@@ -244,7 +253,10 @@ tapdisk_blktap_put_response(td_blktap_t *tap,
 	rsp->operation = op;
 	rsp->status    = tapdisk_blktap_error_status(tap, error);
 
+	tapdisk_blktap_free_request(tap, req);
+
 	__tapdisk_blktap_push_response(tap, final);
+	pthread_mutex_unlock(&tap->mutex);
 }
 
 static void
@@ -254,8 +266,6 @@ tapdisk_blktap_complete_request(td_blktap_t *tap,
 {
 	if (likely(tap->vma))
 		tapdisk_blktap_put_response(tap, req, error, final);
-
-	tapdisk_blktap_free_request(tap, req);
 }
 
 static void
diff --git a/drivers/tapdisk-blktap.h b/drivers/tapdisk-blktap.h
index ca576a77..5bd4aae8 100644
--- a/drivers/tapdisk-blktap.h
+++ b/drivers/tapdisk-blktap.h
@@ -70,6 +70,7 @@ struct td_blktap {
 	td_blktap_req_t        *reqs;
 	int                     n_reqs_free;
 	td_blktap_req_t       **reqs_free;
+	pthread_mutex_t         mutex;
 
 	struct list_head        entry;
 
