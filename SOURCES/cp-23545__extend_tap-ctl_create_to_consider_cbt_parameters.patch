CP-23545: Extend tap-ctl create to consider CBT parameters

From: James Davis <james.davis1@citrix.com>

Changed the previous -c parameter for tap_cli_open to -C due to
conflict with existing -c (non-CBT) parameter in tap_cli_create.
Added -C parameter to tap_cli_create for passing CBT logpath, to
be used when tap_ctl_open is called inside tap_ctl_create.
Additionally, all relevant usage messages updated.

Signed-off-by: James Davis <james.davis1@citrix.com>
Reviewed-by: Germano Percossi <germano.percossi@citrix.com>

diff --git a/control/tap-ctl-create.c b/control/tap-ctl-create.c
index 87cc8cf..8eec119 100644
--- a/control/tap-ctl-create.c
+++ b/control/tap-ctl-create.c
@@ -43,7 +43,7 @@
 
 int
 tap_ctl_create(const char *params, char **devname, int flags, int parent_minor,
-		char *secondary, int timeout, const char *slice)
+		char *secondary, int timeout, const char *slice, const char *logpath)
 {
 	int err, id, minor;
 
@@ -62,7 +62,7 @@ tap_ctl_create(const char *params, char **devname, int flags, int parent_minor,
 		goto destroy;
 
 	err = tap_ctl_open(id, minor, params, flags, parent_minor, secondary,
-			timeout, NULL);
+			timeout, logpath);
 	if (err)
 		goto detach;
 
diff --git a/control/tap-ctl.c b/control/tap-ctl.c
index a82829e..b03aa2e 100644
--- a/control/tap-ctl.c
+++ b/control/tap-ctl.c
@@ -271,7 +271,8 @@ tap_cli_create_usage(FILE *stream)
 		"use secondary image (in mirror mode if no -s)] [-s "
 		"fail over to the secondary image on ENOSPC] "
 		"[-t request timeout in seconds] [-D no O_DIRECT] "
-		"[-c <cgroup-slice>]\n");
+		"[-c <cgroup-slice>] "
+		"[-C <path/to/logfile> insert log layer to track changed blocks]\n");
 }
 
 static int
@@ -281,6 +282,7 @@ tap_cli_create(int argc, char **argv)
 	char *args, *devname, *secondary;
 	char *slice = NULL;
 	char d_flag = 0;
+	char *logpath = NULL;
 
 	args      = NULL;
 	devname   = NULL;
@@ -290,7 +292,7 @@ tap_cli_create(int argc, char **argv)
 	timeout   = 0;
 
 	optind = 0;
-	while ((c = getopt(argc, argv, "a:c:RDd:e:r2:st:h")) != -1) {
+	while ((c = getopt(argc, argv, "a:c:RDd:e:r2:st:C:h")) != -1) {
 		switch (c) {
 		case 'a':
 			args = optarg;
@@ -325,6 +327,10 @@ tap_cli_create(int argc, char **argv)
 		case 't':
 			timeout = atoi(optarg);
 			break;
+		case 'C':
+			logpath = optarg;
+			flags |= TAPDISK_MESSAGE_FLAG_ADD_LOG;
+			break;
 		case '?':
 			goto usage;
 		case 'h':
@@ -337,7 +343,7 @@ tap_cli_create(int argc, char **argv)
 		goto usage;
 
 	err = tap_ctl_create(args, &devname, flags, prt_minor, secondary,
-			timeout, slice);
+			timeout, slice, logpath);
 	if (!err)
 		printf("%s\n", devname);
 
@@ -756,7 +762,7 @@ tap_cli_open_usage(FILE *stream)
 		"use secondary image (in mirror mode if no -s)] [-s "
 		"fail over to the secondary image on ENOSPC] "
 		"[-t request timeout in seconds] [-D no O_DIRECT] "
-		"[-c </path/to/logfile> insert log layer to track changed blocks]\n");
+		"[-C </path/to/logfile> insert log layer to track changed blocks]\n");
 }
 
 static int
@@ -775,7 +781,7 @@ tap_cli_open(int argc, char **argv)
 	logpath    = NULL;
 
 	optind = 0;
-	while ((c = getopt(argc, argv, "a:RDm:p:e:r2:st:c:h")) != -1) {
+	while ((c = getopt(argc, argv, "a:RDm:p:e:r2:st:C:h")) != -1) {
 		switch (c) {
 		case 'p':
 			pid = atoi(optarg);
@@ -809,7 +815,7 @@ tap_cli_open(int argc, char **argv)
 		case 't':
 			timeout = atoi(optarg);
 			break;
-		case 'c': 
+		case 'C': 
 			logpath = optarg;
 			flags |= TAPDISK_MESSAGE_FLAG_ADD_LOG;
 			break;
diff --git a/include/tap-ctl.h b/include/tap-ctl.h
index c92930c..c8b0c11 100644
--- a/include/tap-ctl.h
+++ b/include/tap-ctl.h
@@ -105,7 +105,7 @@ int tap_ctl_allocate(int *minor, char **devname);
 int tap_ctl_free(const int minor);
 
 int tap_ctl_create(const char *params, char **devname, int flags, 
-		int prt_minor, char *secondary, int timeout, const char *slice);
+		int prt_minor, char *secondary, int timeout, const char *slice, const char *logpath);
 int tap_ctl_destroy(const int id, const int minor, int force,
 		    struct timeval *timeout);
 
