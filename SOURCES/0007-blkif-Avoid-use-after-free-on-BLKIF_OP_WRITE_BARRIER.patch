From b0645b54aae659a895e9c02b7a8b54a9abddf5b0 Mon Sep 17 00:00:00 2001
From: Anthoine Bourgeois <anthoine.bourgeois@vates.tech>
Date: Mon, 20 Jan 2025 18:22:07 +0100
Subject: [PATCH] blkif: Avoid use-after-free on BLKIF_OP_WRITE_BARRIER request

Function tapdisk_xenblkif_make_vbd_request will release
tapreq->msg and reinsert it in the reqs_free array if the
request is a BLKIF_OP_WRITE_BARRIER without any segment.
But tapdisk_xenblkif_queue_request will use it to check if
it must send the request to VBD layer.

This bug triggers a crash when DEBUG is defined in td-reqs.c
because DEBUG will poison the msg memory.
Without DEBUG, the code reads freed memory that still contains
unchanged data.

Signed-off-by: Anthoine Bourgeois <anthoine.bourgeois@vates.tech>
---
 drivers/td-req.c | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/drivers/td-req.c b/drivers/td-req.c
index 178985f3..c35b02c6 100644
--- a/drivers/td-req.c
+++ b/drivers/td-req.c
@@ -190,17 +190,21 @@ static void
 tapdisk_xenblkif_free_request(struct td_xenblkif * const blkif,
         struct td_xenblkif_req * const tapreq)
 {
+    int put_bufcache;
+
     ASSERT(blkif);
     ASSERT(tapreq);
     ASSERT(blkif->n_reqs_free < blkif->ring_size);
 
+    put_bufcache = tapreq->msg.nr_segments != 0;
+
 #ifdef DEBUG
 	memset(&tapreq->msg, BLKIF_MSG_POISON, sizeof(tapreq->msg));
 #endif
 
     blkif->reqs_free[blkif->ring_size - (++blkif->n_reqs_free)] = &tapreq->msg;
 
-	if (likely(tapreq->msg.nr_segments))
+	if (likely(put_bufcache))
 	    td_xenblkif_bufcache_put(blkif, tapreq->vma);
 }
 
@@ -829,11 +833,19 @@ tapdisk_xenblkif_queue_request(struct td_xenblkif * const blkif,
         blkif_request_t *msg, struct td_xenblkif_req *tapreq)
 {
     int err;
+    int queue_request;
 
     ASSERT(blkif);
     ASSERT(msg);
     ASSERT(tapreq);
 
+    queue_request = tapreq->msg.nr_segments != 0;
+
+    /*
+     * Do not use tapreq after tapdisk_xenblkif_make_vbd_request
+     * because this function can release tapreq->msg and reinsert it
+     * in the reqs_free array.
+     */
     err = tapdisk_xenblkif_make_vbd_request(blkif, tapreq);
     if (unlikely(err)) {
         /* TODO log error */
@@ -841,7 +853,7 @@ tapdisk_xenblkif_queue_request(struct td_xenblkif * const blkif,
         return err;
     }
 
-	if (likely(tapreq->msg.nr_segments)) {
+	if (likely(queue_request)) {
 		err = tapdisk_vbd_queue_request(blkif->vbd, &tapreq->vreq);
 		if (unlikely(err)) {
 			/* TODO log error */
