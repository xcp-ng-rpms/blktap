From 56cfdac9d60959917623fc462ec3b739b8f6f75a Mon Sep 17 00:00:00 2001
From: Anthoine Bourgeois <anthoine.bourgeois@vates.tech>
Date: Wed, 12 Mar 2025 13:46:25 +0100
Subject: [PATCH] libqcow2: prepare proper cleanup of libqcow2 on close

Signed-off-by: Anthoine Bourgeois <anthoine.bourgeois@vates.tech>
---
 include/qemu/main-loop.h   |  1 +
 qcow2/lib/util/main-loop.c | 32 ++++++++++++++++++++++++++++++++
 2 files changed, 33 insertions(+)

diff --git a/include/qemu/main-loop.h b/include/qemu/main-loop.h
index e0a0be44..a98a3914 100644
--- a/include/qemu/main-loop.h
+++ b/include/qemu/main-loop.h
@@ -57,6 +57,7 @@ void qemu_init_cpu_loop(void);
  * In the case of QEMU tools, this will also start/initialize timers.
  */
 int qemu_init_main_loop(Error **errp);
+int qemu_deinit_main_loop(void);
 
 /**
  * main_loop_wait: Run one iteration of the main loop.
diff --git a/qcow2/lib/util/main-loop.c b/qcow2/lib/util/main-loop.c
index ce3f16ce..0c63e973 100644
--- a/qcow2/lib/util/main-loop.c
+++ b/qcow2/lib/util/main-loop.c
@@ -39,6 +39,8 @@
 #include <sys/wait.h>
 #endif
 
+static void iohandler_deinit(void);
+
 #ifndef _WIN32
 
 /* If we have signalfd, we mask out the signals we want to handle and then
@@ -191,6 +193,28 @@ int qemu_init_main_loop(Error **errp)
     return 0;
 }
 
+int qemu_deinit_main_loop(void)
+{
+    GSource *src;
+
+    src = iohandler_get_g_source();
+    g_source_destroy(src);
+    iohandler_deinit();
+
+    src = aio_get_g_source(qemu_aio_context);
+    g_source_destroy(src);
+
+    g_array_free(gpollfds, TRUE);
+
+    qemu_bh_delete(qemu_notify_bh);
+
+    aio_context_destroy(qemu_aio_context);
+
+    timerlistgroup_deinit(&main_loop_tlg);
+
+    return 0;
+}
+
 #if 0
 static void main_loop_update_params(EventLoopBase *base, Error **errp)
 {
@@ -633,6 +657,14 @@ static void iohandler_init(void)
     }
 }
 
+static void iohandler_deinit(void)
+{
+    if (iohandler_ctx) {
+        aio_context_destroy(iohandler_ctx);
+        iohandler_ctx = NULL;
+    }
+}
+
 AioContext *iohandler_get_aio_context(void)
 {
     iohandler_init();
